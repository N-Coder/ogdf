name: Check, Build and Test

on:
  pull_request:
  push:

# # Debug setup:
# env:
#   OGDF_UTILS_PREQUEL: "set -x"
#   CCACHE_DEBUG: 1
#   CCACHE_DEBUGDIR: ${{ github.workspace }}/ccache-debug
#   VERBOSE: 1

jobs:
  # We don't want to run the CI twice for PRs from branches within the repo, so for a push event we only run the CI if
  # the push was to the master branch or to a fork of the repo, while running the CI for all (in- and cross-repo) PRs.
  # Workflows skipped due to filters block PRs from being merged (their required jobs count as "pending"),
  # while jobs skipped due to conditions still count as success, so we apply the filter here.
  precheck:
    name: "Check whether to run the CI"
    runs-on: ubuntu-latest
    if: github.event.repository.full_name != 'ogdf/ogdf' || github.event_name != 'push' || github.event.ref == 'refs/heads/master'
    steps:
      - run: echo "Running CI pipeline!"

  style:
    needs: [ precheck ]
    name: "Check code style"
    runs-on: ubuntu-latest
    container: docker.io/ogdf/clang:15
    steps:
      - name: "Add workspace as a safe directory in containers"
        run: git config --system --add safe.directory $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      - name: Run style checks
        run: util/style/test_all.sh
      - name: Generate patch with style fixes upon failure
        run: |
          echo "Please download the artifact and apply style-fixes.patch to fix code style problems."
          util/style/test_all.sh -f
          git diff > style-fixes.patch
          git status
        if: failure()
      - name: Store patch with style fixes
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: style-fixes
          path: style-fixes.patch

  dirs:
    needs: [ precheck ]
    name: "Check directory structure"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test directory structure
        run: util/test_directory_structure.sh

  docs:
    needs: [ precheck ]
    name: "Check Doxygen"
    runs-on: ubuntu-latest
    container: docker.io/ogdf/clang:15
    steps:
      - uses: actions/checkout@v4
      - run: util/test_doxygen.sh


  static-analysis:
    name: "Static Analysis"
    runs-on: ubuntu-latest
    container: docker.io/ogdf/clang:15
    needs: [ style, dirs, docs ]
    env:
      CCACHE_COMPILERCHECK: "%compiler% -v"
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: |
          env
      - name: "Add workspace as a safe directory in containers"
        run: git config --system --add safe.directory $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      - name: Set-up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}
      - name: Restore clang-tidy cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/.ctcache
          key: clang-tidy-cache-${{ github.run_id }}.${{ github.run_attempt }}
          restore-keys: clang-tidy-cache
      - name: Run analysis
        env:
          CTCACHE_LOCAL: 1
          CTCACHE_DIR: ${{ github.workspace }}/.ctcache
          CTCACHE_SAVE_OUTPUT: 1
          CTCACHE_IGNORE_OUTPUT: 1
          # CTCACHE_DUMP: ${{ env.CCACHE_DEBUG }} # defining the var is enough to enable
          # CTCACHE_DUMP_DIR: ${{ github.workspace }}/ctcache-debug
        run: |
          mkdir static-analysis
        shell: bash
      - name: Save PR number
        if: github.event_name == 'pull_request'
        run: |
          echo ${{ github.event.number }} > static-analysis/PR-NUMBER
      - name: Store static analysis results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: static-analysis
          path: static-analysis/
